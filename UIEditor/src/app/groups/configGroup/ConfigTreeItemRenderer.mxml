<?xml version="1.0" encoding="utf-8"?>
<s:MXTreeItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="library://ns.adobe.com/flex/spark" 
					  xmlns:mx="library://ns.adobe.com/flex/mx"
					  height="20"
					  doubleClickEnabled="true"
					  doubleClick="doubleClickHandler(event)"
					  dataChange="dataChangeHandler(event)"
					  >
	<fx:Script>
		<![CDATA[
			import app.common.AppCommon;
			import app.common.ImageAssets;
			import app.controls.Reload;
			
			import mx.controls.Alert;
			import mx.controls.Tree;
			import mx.events.FlexEvent;
			
			private var _file:File;
			
			
			
			protected function dataChangeHandler(event:FlexEvent):void
			{
				if(data == null) return;
				icon.source = (data.children == null) ? ImageAssets.Doc : ImageAssets.Folder;
			}
			
			
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				this.toolTip = (labelField.x + labelField.width + 20 > owner.width) ? data.name : "";
			}
			
			
			
			protected function doubleClickHandler(event:MouseEvent):void
			{
				var tree:Tree = owner as Tree;
				if(treeListData.hasChildren) {
					tree.expandItem(data, !tree.isItemOpen(data));
				}
				else {
					_file = new File(data.path);
					_file.addEventListener(Event.COMPLETE, completeHandler);
					_file.load();
				}
			}
			
			private function completeHandler(event:Event):void
			{
				_file.removeEventListener(Event.COMPLETE, completeHandler);
				Reload.alert("打开所选配置文件", openCallback, false);
			}
			
			private function openCallback(confirmed:Boolean):void
			{
				if(!confirmed) return;
				
				var xml:XML;
				try {
					xml = new XML(_file.data);
				}
				catch(error:Error) {
					Alert.show("XML内容格式有误！", "提示");
					return;
				}
				AppCommon.controller.openConfig(data.path, xml);
			}
			
		]]>
	</fx:Script>
	
	
	
	
	<s:states>
		<s:State name="normal" />            
		<s:State name="hovered" />
		<s:State name="selected" />
	</s:states>
	<s:HGroup left="0" right="0" top="0" bottom="0" verticalAlign="middle">
		<s:Rect id="indentationSpacer" width="{treeListData.indent}" percentHeight="100" alpha="0">
			<s:fill>
				<s:SolidColor color="0xFFFFFF" />
			</s:fill>
		</s:Rect>
		<s:Group id="disclosureGroup">
			<s:BitmapImage source="{treeListData.disclosureIcon}" visible="{treeListData.hasChildren}" />
		</s:Group>
		<s:BitmapImage id="icon" />
		<s:Label id="labelField" text="{treeListData.label}" paddingTop="2"/>
	</s:HGroup>
</s:MXTreeItemRenderer>
